
@import "../Helpers/_variables.scss";
@import "../Helpers/_mixins.scss";
@import "./_colors.scss";

/*Semantically important icons*/

.icon__search {
	margin-top: -0.125em;
}

#icon__bars {

	display: block;
	color: $white;

	@include mediaQuery--custom($mq-desktop, 1350px) {
		display: none;
	}
}

.icon__media--circle {
	@include circle(1em, 1em, 0.5em);

	background: $teal;
}


/*positions the icon in the specified direction by 1em*/

/* aligns an icon on the right side of a menu item, ideal for positioning icons that are placed within the same
container as a text to create padding between the text and the icon*/
.icon__menu-item--right {
	position: absolute;
	right: 1em;
}

.icon__menu-item--top {
	position: absolute;
	top: 1em;
}


/*creates a margin on the opposite side of the specified position
in order to align the icon on either the right or left margin*/
.icon--left {
	margin-right: 0.5em;
}

.icon--right {
	margin-left: 0.5em;
  margin-top: 0.125em;
}

/*Positioning for absolutely positioned items*/
.bottom {
	bottom: 0;
}

.left {
	left: 0;
}

.right {
	right: 0;
}

.top {
	top: 0;
}


/*Creates a triangle representing an arrow with equal widths 
for all borders. Commonly used with dropdown menus to signify 
additional content. Color class names for black and white arrows
have been created for styling purposes, but new class names with
different colors can be created by adding a state value for color 
(--state) and including the arrow mixin with desired color.*/


/*white arrows*/
.arrow--up--white {
	@include arrow-eq(absolute, "up", 0.5em, $white);	
}

.arrow--right-white {
	@include arrow-eq(absolute, "right", 0.5em, $white);
}

.arrow--down-white {
	@include arrow-eq(absolute, "down", 0.5em, $white);
}

.arrow--left-white {
	@include arrow-eq(absolute, "left", 0.5em, $white);
}

/*black arrows*/
.arrow--up-black {
	@include arrow-eq(absolute, "up", 0.5em, $black);
}

.arrow--right-black {
	@include arrow-eq(absolute, "right", 0.5em, $black);
}

.arrow--down-black {
	@include arrow-eq(absolute, "down", 0.5em, $black);
}

.arrow--left-black {
	@include arrow-eq(absolute, "left", 0.5em, $black);
}
