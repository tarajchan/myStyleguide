
@import "../Helpers/_variables.scss";
@import "../Helpers/_mixins.scss";
@import "./_colors.scss";

/*Semantically important icons*/


#icon__mq {

	display: block;
	color: $white;

	@include mediaQuery--custom($mq-desktop, 1350px) {
		display: none;
	}
}

.icon__button {
	@include size(2em);

	margin-right: 0.5em;
	padding: 0.5em;
	border: 0.05em solid $charcoal;
	border-radius: 0.25em;
	box-shadow: inset 0 0em 0.75em 0.125em $black,
							inset 0 0.35em 1em 0.125em $grey-dark;
	color: $white;
	cursor: pointer;
}

.icon__code--left {
	@include arrow(absolute, "left", 0.25em, $grey-dark, solid);

	right: 0.85em;
}

.icon__code--right {
	@include arrow(absolute, "right", 0.25em, $grey-dark, solid);

	left: 0.85em;
}

.icon__home {
	position: relative;
	color: $black;
	font-size: 1.15em;
}

.icon__home:visited {
	color: $black;
}

.icon__info {
	color: $teal-dark;
	font-size: 2em;
	text-shadow: 0.05em 0.05em $teal-lowOpacity;
}

.icon__info--alert {
	@include padding(null, 0.25em, 0.25em, null);
	@include size(25%, 100%);

	float: left;
	text-align: center;

	@media screen and (min-width: 420px) {
		@include padding(0.25em, 0.25em, null, null);
		@include size(10%, 100%);
	}
}

.icon__media--circle--small {
	@include circle(1em, 1em, 0.5em);

	background: $teal;
}

.icon__media--circle--medium {
	@include circle(1.5em, 1.5em, 0.75em);

	background: $teal;
}

.icon__search {
	margin-top: 0;
	font-size: 1em;
	outline: none;
}

.icon_search:hover > .fa-search {
	position: relative;
	top: -0.125em;
}

.icon__search--large {
	font-size: 1.25em;
}

/*icon containers*/

.icon__wrapper {
	@include prefix(transition, all 0.15s ease-in-out);

	min-height: 2em;
	margin-left: 0.5em;
	padding: 0.25em;
	background: $transparent;
	border: 0;

		&:hover {
			background: $teal;
			border-bottom: 0;
			box-shadow: inset 0 -0.05em 0.5em 0.05em $teal-dark;
			cursor: pointer;
			padding: 0.35em;
		}
}

.icon__wrapper.first {
	margin-left: 0;
}

.icon__wrapper--home {
	@extend .icon__wrapper;

	padding: 0.25em 0;
	border-bottom: 0.25em solid $teal;
}

.icon__wrapper > *:hover {
	color: $white;
}

.icon__wrapper--home > *:hover {
	color: $white;
}


/*page corner icons*/

.icon__pageCorner--top-left {
	@include page-corner(relative, "top left", 0.25em, groove, $teal, 2em);	
}

.icon__pageCorner--bottom-right {
	@include page-corner(relative, "bottom right", 0.25em, groove, $teal, 2em);	
}


/* aligns an icon on the right side of a menu item, ideal for positioning icons that are placed within the same
container as a text to create padding between the text and the icon*/
.icon__menu-item--right {
	position: absolute;
	right: 0.75em;
}

.icon__menu-item--top {
	position: absolute;
	top: 0.75em;
}


/*creates a margin on the opposite side of the specified position
in order to align the icon on either the right or left margin*/
.icon--left {
	margin-right: 0.5em;
}

.icon--right {
	margin-left: 0.5em;
  margin-top: 0.125em;
}

/*Positioning for absolutely positioned items*/

.icon--absolute {
	position: absolute;
}

.bottom {
	bottom: 0;
}

.left {
	left: 0;
}

.right {
	right: 0;
}

.top {
	top: 0;
}


/*Creates a triangle with equal widths for all borders. Commonly used 
with dropdown menus to signify additional content. Color class names for
black and white triangles have been created for styling purposes,but new 
class names with different colors can be created by adding a state value 
for color (--state) and including the .triangle mixin with desired color.*/


/*white triangles*/
 .triangle--up--white {
	@include triangle-eq(absolute, "up", 0.5em, $white);	
}

 .triangle--right-white {
	@include triangle-eq(absolute, "right", 0.5em, $white);
}

 .triangle--down-white {
	@include triangle-eq(absolute, "down", 0.5em, $white);

	cursor: pointer;
}

 .triangle--left-white {
	@include triangle-eq(absolute, "left", 0.5em, $white);
}

/*black triangles*/
 .triangle--up-black {
	@include triangle-eq(absolute, "up", 0.5em, $black);
}

 .triangle--right-black {
	@include triangle-eq(absolute, "right", 0.5em, $black);
}

 .triangle--down-black {
	@include triangle-eq(absolute, "down", 0.5em, $black);
}

 .triangle--left-black {
	@include triangle-eq(absolute, "left", 0.5em, $black);
}

.triangle--right-black.left:before {
	content: "";
}


/*white triangle sizes*/

.triangle--down-white--small {
	@include triangle-eq(absolute, "down", 0.25em, $white);
}


/*black triangle sizes*/

.triangle--down-black--small {
	@include triangle-eq(absolute, "down", 0.25em, $black);
}

.triangle--left-black--small {
	@include triangle-eq(absolute, "left", 0.25em, $black);
}

/*white arrows*/

.arrow--down-white {
	@include arrow(relative, "down", 0.25em, $white, solid);
}
