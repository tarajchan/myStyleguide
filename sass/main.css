/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Semantically important icons*/
#icon__mq {
  display: block;
  color: #FFF; }
  @media screen and (min-width: 1024px) and (max-width: 1350px) {
    #icon__mq {
      display: none; } }

.icon__button {
  width: 2em;
  height: 2em;
  position: absolute;
  left: 1.5em;
  padding: 0.5em;
  border: 0.01em solid #3C3939;
  border-radius: 0.25em;
  box-shadow: inset 0 0em 0.75em 0.125em #000, inset 0 0.35em 1em 0.125em #4E4E4E;
  color: #FFF;
  cursor: pointer; }

.icon__code--left {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(315deg);
  transform: rotate(315deg);
  -moz-transform: rotate(315deg);
  transform: rotate(315deg);
  -ms-transform: rotate(315deg);
  transform: rotate(315deg);
  -o-transform: rotate(315deg);
  transform: rotate(315deg);
  right: 0.85em; }

.icon__code--right {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(135deg);
  transform: rotate(135deg);
  -moz-transform: rotate(135deg);
  transform: rotate(135deg);
  -ms-transform: rotate(135deg);
  transform: rotate(135deg);
  -o-transform: rotate(135deg);
  transform: rotate(135deg);
  left: 0.85em; }

.icon__search {
  margin-top: -0.125em; }

.icon__media--circle {
  height: 1em;
  width: 1em;
  -ms-border-radius: 0.5em;
  moz-border-radius: 0.5em;
  -webkit-border-radius: 0.5em;
  border-radius: 0.5em;
  background: #3CB3B9; }

/*page corner icons*/
.icon__pageCorner--top-left {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

.icon__pageCorner--bottom-right {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

/* aligns an icon on the right side of a menu item, ideal for positioning icons that are placed within the same
container as a text to create padding between the text and the icon*/
.icon__menu-item--right {
  position: absolute;
  right: 0; }

.icon__menu-item--top {
  position: absolute;
  top: 1em; }

/*creates a margin on the opposite side of the specified position
in order to align the icon on either the right or left margin*/
.icon--left {
  margin-right: 0.5em; }

.icon--right {
  margin-left: 0.5em;
  margin-top: 0.125em; }

/*Positioning for absolutely positioned items*/
.icon--absolute {
  position: absolute; }

.bottom {
  bottom: 0; }

.left {
  left: 0; }

.right {
  right: 0; }

.top {
  top: 0; }

/*Creates a triangle with equal widths for all borders. Commonly used 
with dropdown menus to signify additional content. Color class names for
black and white triangles have been created for styling purposes,but new 
class names with different colors can be created by adding a state value 
for color (--state) and including the .triangle mixin with desired color.*/
/*white triangles*/
.triangle--up--white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #FFF; }

.triangle--right-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

.triangle--down-white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #FFF;
  cursor: pointer; }

.triangle--left-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

/*black triangles*/
.triangle--up-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #000; }

.triangle--right-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--down-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #000; }

.triangle--left-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--right-black.left:before {
  content: ""; }

/*black triangle sizes*/
.triangle--down-black--small {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.25em solid transparent;
  border-right: 0.25em solid transparent;
  border-top: 0.25em solid #000; }

/*white arrows*/
.arrow--down-white {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #FFF;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(225deg);
  transform: rotate(225deg);
  -moz-transform: rotate(225deg);
  transform: rotate(225deg);
  -ms-transform: rotate(225deg);
  transform: rotate(225deg);
  -o-transform: rotate(225deg);
  transform: rotate(225deg); }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
.accordion, .accordion.active {
  -webkit-transition: 0.4s;
  transition: 0.4s;
  -moz-transition: 0.4s;
  transition: 0.4s;
  -ms-transition: 0.4s;
  transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
  display: flex;
  align-items: center;
  flex-direction: row;
  margin: auto;
  width: 90%;
  padding: 1em;
  background: #000;
  border: none;
  border-radius: 0.5em;
  box-shadow: 0 0.05em 0.125em 0 #A0A0A0, 0 -0.125em 0.25em 0 #A0A0A0, inset 0 0.125em 0.5em 0.125em #4E4E4E;
  color: white;
  cursor: pointer;
  outline: none;
  text-align: left;
  font-family: "Quicksand Light"; }

.accordion.active {
  border-top-left-radius: 0.5em;
  border-top-right-radius: 0.5em;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  background: #3CB3B9;
  box-shadow: 0 0.05em 0.5em 0 #A0A0A0, inset 0 0.125em 0.5em 0.125em #4BA7AB; }

.accordion.active > .accordion__expander-icon {
  -webkit-transform: rotate(-180deg);
  transform: rotate(-180deg);
  -moz-transform: rotate(-180deg);
  transform: rotate(-180deg);
  -ms-transform: rotate(-180deg);
  transform: rotate(-180deg);
  -o-transform: rotate(-180deg);
  transform: rotate(-180deg);
  border: 0.25em double #FFF;
  transition: transform 0.3s; }

.accordion.active > .accordion__expander-icon > .arrow--down-white {
  top: 0.05em;
  left: 0.25em; }

.accordion:hover {
  background: #4E4E4E; }

.accordion:hover .accordion__expander-icon {
  border-color: #212121; }

.accordion.active:hover {
  background: #3CB3B9;
  opacity: 0.85; }

.accordion.active:hover .accordion__expander-icon {
  border-color: #FFF; }

.accordion__expander-icon {
  position: relative;
  min-height: 1.75em;
  min-width: 1.75em;
  padding: 0.5em;
  border: 0.25em double #4E4E4E;
  border-radius: 0.25em; }

.accordion__expander-icon > .arrow--down-white {
  top: 0.25em;
  left: 0.275em; }

.accordion__heading {
  flex: 1; }

.accordion__panel {
  position: relative;
  display: none;
  margin: auto;
  max-height: 0;
  width: 90%;
  padding: 0.5em;
  background: #212121;
  color: #FFF;
  font-family: "Quicksand Light";
  line-height: 1.5em; }

.accordion__panel--left {
  float: left;
  max-width: 50%;
  min-height: 100%; }

.accordion__panel--right {
  float: right;
  max-width: 50%;
  min-height: 100%; }

.accordion__innerPanel {
  padding-top: 0.5em;
  padding-right: 0.5em;
  padding-bottom: 0.65em;
  padding-left: 0.5em;
  display: flex;
  min-width: 100%;
  background: #000;
  border: 0.01em solid transparent;
  border-radius: 0.25em; }

.accordion__panel.show {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0.5em;
  border-bottom-left-radius: 0.5em;
  display: flex;
  min-height: 8em; }

.accordion__row,
.accordion__row--last,
.accordion__row--first {
  -webkit-background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  -moz-background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  -ms-background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  -o-background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  background: linear-gradient(to right, #4E4E4E 10%, #8C8C8C 40%, #A0A0A0 50%, #8C8C8C 60%, #4E4E4E 100%);
  padding: 0.25em 0; }

.accordion__row--last {
  border-bottom-right-radius: 0.25em;
  border-bottom-left-radius: 0.25em;
  padding-bottom: 1em; }

.accordion__row--first {
  border-top-left-radius: 0.25em;
  border-top-right-radius: 0.25em;
  padding-top: 1em; }

.accordion__group {
  padding: 1em;
  background: #000;
  border: 0.01em solid transparent;
  border-radius: 0.25em; }

/*Accordion containers*/
.accordion--flex {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap; }

/*Accordian styles*/
/*creates a "screen-like" appearance on the inner panel of the
accordian panel*/
.accordion__innerPanel--teal-screen {
  background: linear-gradient(to right, #000 10%, #4BA7AB 30%, #B0F0FF 50%, #4BA7AB 65%, #000 100%); }

/*Partials*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Semantically important icons*/
#icon__mq {
  display: block;
  color: #FFF; }
  @media screen and (min-width: 1024px) and (max-width: 1350px) {
    #icon__mq {
      display: none; } }

.icon__button {
  width: 2em;
  height: 2em;
  position: absolute;
  left: 1.5em;
  padding: 0.5em;
  border: 0.01em solid #3C3939;
  border-radius: 0.25em;
  box-shadow: inset 0 0em 0.75em 0.125em #000, inset 0 0.35em 1em 0.125em #4E4E4E;
  color: #FFF;
  cursor: pointer; }

.icon__code--left {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(315deg);
  transform: rotate(315deg);
  -moz-transform: rotate(315deg);
  transform: rotate(315deg);
  -ms-transform: rotate(315deg);
  transform: rotate(315deg);
  -o-transform: rotate(315deg);
  transform: rotate(315deg);
  right: 0.85em; }

.icon__code--right {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(135deg);
  transform: rotate(135deg);
  -moz-transform: rotate(135deg);
  transform: rotate(135deg);
  -ms-transform: rotate(135deg);
  transform: rotate(135deg);
  -o-transform: rotate(135deg);
  transform: rotate(135deg);
  left: 0.85em; }

.icon__search {
  margin-top: -0.125em; }

.icon__media--circle {
  height: 1em;
  width: 1em;
  -ms-border-radius: 0.5em;
  moz-border-radius: 0.5em;
  -webkit-border-radius: 0.5em;
  border-radius: 0.5em;
  background: #3CB3B9; }

/*page corner icons*/
.icon__pageCorner--top-left {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

.icon__pageCorner--bottom-right {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

/* aligns an icon on the right side of a menu item, ideal for positioning icons that are placed within the same
container as a text to create padding between the text and the icon*/
.icon__menu-item--right {
  position: absolute;
  right: 0; }

.icon__menu-item--top {
  position: absolute;
  top: 1em; }

/*creates a margin on the opposite side of the specified position
in order to align the icon on either the right or left margin*/
.icon--left {
  margin-right: 0.5em; }

.icon--right {
  margin-left: 0.5em;
  margin-top: 0.125em; }

/*Positioning for absolutely positioned items*/
.icon--absolute {
  position: absolute; }

.bottom {
  bottom: 0; }

.left {
  left: 0; }

.right {
  right: 0; }

.top {
  top: 0; }

/*Creates a triangle with equal widths for all borders. Commonly used 
with dropdown menus to signify additional content. Color class names for
black and white triangles have been created for styling purposes,but new 
class names with different colors can be created by adding a state value 
for color (--state) and including the .triangle mixin with desired color.*/
/*white triangles*/
.triangle--up--white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #FFF; }

.triangle--right-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

.triangle--down-white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #FFF;
  cursor: pointer; }

.triangle--left-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

/*black triangles*/
.triangle--up-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #000; }

.triangle--right-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--down-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #000; }

.triangle--left-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--right-black.left:before {
  content: ""; }

/*black triangle sizes*/
.triangle--down-black--small {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.25em solid transparent;
  border-right: 0.25em solid transparent;
  border-top: 0.25em solid #000; }

/*white arrows*/
.arrow--down-white {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #FFF;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(225deg);
  transform: rotate(225deg);
  -moz-transform: rotate(225deg);
  transform: rotate(225deg);
  -ms-transform: rotate(225deg);
  transform: rotate(225deg);
  -o-transform: rotate(225deg);
  transform: rotate(225deg); }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
.navigationBar__component {
  display: flex;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  flex: 1;
  align-items: center;
  justify-content: center; }

.navigationBar__dropDown-menu {
  display: none;
  position: absolute;
  flex-direction: column;
  min-height: 14em;
  min-width: 10em;
  background: #000;
  top: 2.8em;
  left: 0;
  border-top: 0.25em solid #3CB3B9; }

.navigationBar__dropDown-item,
.navigationBar__dropDown-sub-item {
  position: relative;
  flex: 1;
  display: flex;
  align-items: center;
  background: transparent;
  border-bottom: 0.01em solid #FFF;
  color: #FFF; }

/*creates a left margin for the text for an indented appearance*/
.navigationBar__dropDown-item-text {
  position: absolute;
  left: 1em;
  font-size: 0.95em; }

/*creates a border to distinguish sub-menu item
from drop down item*/
.navigationBar__dropDown-sub-item {
  border-left: 0.01em solid #FFF; }

.navigationBar__dropDown-sub-item:hover {
  background: #3CB3B9;
  box-shadow: inset 0 0 2em 0.25em #23585A; }

.navigationBar__dropDown-sub-menu {
  position: absolute;
  display: none;
  left: 10em;
  top: 0;
  min-height: 5.5em;
  min-width: 10em;
  background: #000; }

.navigationBar__dropDown-item:hover .navigationBar__dropDown-sub-menu {
  display: flex;
  flex-direction: column; }

/*create a variable for "hover" background color*/
.navigationBar__dropDown-item:hover {
  background: #3CB3B9;
  box-shadow: inset 0 0 2em 0.25em #23585A; }

.navigationBar__innerWrapper {
  position: fixed;
  display: flex;
  left: 1vw;
  right: 1vw;
  top: 0.85em;
  max-height: 3em;
  border-radius: 0.5em;
  border-bottom: 0.25em solid #3CB3B9;
  box-shadow: inset 0 0.125em 1em 0.125em #3C3939; }

.navigationBar__highlight {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  min-height: 0.375em; }

.navigationBar__menu {
  display: flex;
  flex: 1;
  min-height: 3em; }
  @media screen and (min-width: 768px) and (max-width: 1023px) {
    .navigationBar__menu {
      padding: 0 2em; } }
  @media screen and (min-width: 1024px) and (max-width: 1536px) {
    .navigationBar__menu {
      padding: 0 3em; } }
  @media screen and (min-width: 1536px) {
    .navigationBar__menu {
      padding: 0 4em; } }

.navigationBar__menu-item {
  display: none; }
  @media screen and (min-width: 768px) {
    .navigationBar__menu-item {
      flex: 1;
      align-items: center;
      justify-content: center;
      position: relative;
      display: flex;
      max-height: 2.7em;
      border-left: 0.05em solid #3C3939;
      color: #FFF;
      text-align: center;
      transition: 0.3s; } }
  @media screen and (min-width: 768px) and (max-width: 1023px) {
    .navigationBar__menu-item:nth-child(1)::after {
      content: "1";
      font-size: 0.95em; }
    .navigationBar__menu-item:nth-child(2)::after {
      content: "2";
      font-size: 0.95em; }
    .navigationBar__menu-item:nth-child(3)::after {
      content: "3";
      font-size: 0.95em; }
    .navigationBar__menu-item:nth-child(4)::after {
      content: "4";
      font-size: 0.95em; } }
  @media screen and (min-width: 1024px) and (max-width: 1536px) {
    .navigationBar__menu-item:nth-child(1)::after {
      content: "Item 1";
      font-size: 1em; }
    .navigationBar__menu-item:nth-child(2)::after {
      content: "Item 2";
      font-size: 1em; }
    .navigationBar__menu-item:nth-child(3)::after {
      content: "Item 3";
      font-size: 1em; }
    .navigationBar__menu-item:nth-child(4)::after {
      content: "Item 4";
      font-size: 1em; } }
  @media screen and (min-width: 1536px) {
    .navigationBar__menu-item:nth-child(1)::after {
      content: "Item 1";
      font-size: 1.025em; }
    .navigationBar__menu-item:nth-child(2)::after {
      content: "Item 2";
      font-size: 1.025em; }
    .navigationBar__menu-item:nth-child(3)::after {
      content: "Item 3";
      font-size: 1.025em; }
    .navigationBar__menu-item:nth-child(4)::after {
      content: "Item 4";
      font-size: 1.025em; } }

.navigationBar__menu-item:hover .navigationBar__dropDown-menu {
  display: flex; }

.navigationBar__menu-item--start {
  border-left: 0; }

.navigationBar__menu-item:active,
.navigationBar__menu-item--start:active,
.navigationBar__menu-item:hover,
.navigationBar__menu-item--start:hover {
  background: #3CB3B9;
  box-shadow: inset 0 0 2em 0.25em #23585A;
  border-left-color: #000;
  cursor: pointer; }

/*BOTTOM NAVIGATION FOR MOBILE AND TABLET VIEW*/
/*acts as a container for items inside the bottom navigation bar*/
.navigationBar--bottom {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: row;
  min-height: 4em;
  font-family: "Quicksand Regular";
  background: #000;
  box-shadow: 0 -0.05em 0.5em 0.05em #4E4E4E; }
  @media screen and (min-width: 1024px) {
    .navigationBar--bottom {
      display: none; } }

.navigationBar__highlight--bottom {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: #3CB3B9;
  min-height: 0.375em; }

/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
.breadcrumb {
  position: relative;
  display: flex;
  flex-direction: row;
  min-height: 2em;
  padding-left: 2.75em;
  align-items: center;
  font-family: "Quicksand Light"; }

.breadcrumb__divider {
  margin-right: 0.5em;
  margin-left: 0.5em;
  color: #3CB3B9;
  font-family: "Quicksand Bold"; }

.breadcrumb__link {
  cursor: pointer; }

.breadcrumb__link:hover {
  opacity: 0.75; }

.breadcrumb__link--active {
  font-weight: 700; }

.breadcrumb--bordered {
  margin: auto;
  max-width: 95%;
  padding-left: 0.5em;
  border: 0.25em double #BEE4DB; }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Styling for search buttons*/
.button, .button__search, .button--absolute, #button--active, .button--noBorder {
  align-items: center;
  justify-content: center;
  display: flex;
  background: transparent;
  border: 0.01em solid #3C3939;
  border-radius: 0.5em;
  color: #FFF;
  cursor: pointer;
  font-family: "Quicksand Light";
  text-decoration: none; }

.button__search {
  border-top: 0.05em solid #8C8C8C;
  border-right: 0.05em solid #8C8C8C;
  border-bottom: 0.05em solid #8C8C8C;
  border-left: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0.5em;
  border-bottom-right-radius: 0.5em;
  border-bottom-left-radius: 0; }

.button--absolute, #button--active {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  padding-left: 1em;
  border-radius: 0;
  justify-content: flex-start;
  width: 100%;
  outline: none; }

.button.active, .active.button__search, .active.button--absolute, .active#button--active, .active.button--noBorder,
.button--absolute.active,
.active#button--active {
  background: transparent; }

.button--absolute:hover, #button--active:hover,
.button--absolute:active,
#button--active:active {
  border-top: 0.25em solid #3CB3B9; }

#button--active {
  border-top: 0.25em solid #3CB3B9;
  border-right: 0;
  border-bottom: 0;
  border-left: 0; }

.button--noBorder {
  border: 0; }

/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
.card {
  position: relative; }

.card__back,
.card__front {
  position: absolute;
  left: 0;
  top: 0;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  backface-visibility: hidden;
  -o-backface-visibility: hidden;
  backface-visibility: hidden; }

.card__back {
  background: #000; }

.card__front {
  background: #3CB3B9; }

/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Semantically important icons*/
#icon__mq {
  display: block;
  color: #FFF; }
  @media screen and (min-width: 1024px) and (max-width: 1350px) {
    #icon__mq {
      display: none; } }

.icon__button {
  width: 2em;
  height: 2em;
  position: absolute;
  left: 1.5em;
  padding: 0.5em;
  border: 0.01em solid #3C3939;
  border-radius: 0.25em;
  box-shadow: inset 0 0em 0.75em 0.125em #000, inset 0 0.35em 1em 0.125em #4E4E4E;
  color: #FFF;
  cursor: pointer; }

.icon__code--left {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(315deg);
  transform: rotate(315deg);
  -moz-transform: rotate(315deg);
  transform: rotate(315deg);
  -ms-transform: rotate(315deg);
  transform: rotate(315deg);
  -o-transform: rotate(315deg);
  transform: rotate(315deg);
  right: 0.85em; }

.icon__code--right {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(135deg);
  transform: rotate(135deg);
  -moz-transform: rotate(135deg);
  transform: rotate(135deg);
  -ms-transform: rotate(135deg);
  transform: rotate(135deg);
  -o-transform: rotate(135deg);
  transform: rotate(135deg);
  left: 0.85em; }

.icon__search {
  margin-top: -0.125em; }

.icon__media--circle {
  height: 1em;
  width: 1em;
  -ms-border-radius: 0.5em;
  moz-border-radius: 0.5em;
  -webkit-border-radius: 0.5em;
  border-radius: 0.5em;
  background: #3CB3B9; }

/*page corner icons*/
.icon__pageCorner--top-left {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

.icon__pageCorner--bottom-right {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

/* aligns an icon on the right side of a menu item, ideal for positioning icons that are placed within the same
container as a text to create padding between the text and the icon*/
.icon__menu-item--right {
  position: absolute;
  right: 0; }

.icon__menu-item--top {
  position: absolute;
  top: 1em; }

/*creates a margin on the opposite side of the specified position
in order to align the icon on either the right or left margin*/
.icon--left {
  margin-right: 0.5em; }

.icon--right {
  margin-left: 0.5em;
  margin-top: 0.125em; }

/*Positioning for absolutely positioned items*/
.icon--absolute {
  position: absolute; }

.bottom {
  bottom: 0; }

.left {
  left: 0; }

.right {
  right: 0; }

.top {
  top: 0; }

/*Creates a triangle with equal widths for all borders. Commonly used 
with dropdown menus to signify additional content. Color class names for
black and white triangles have been created for styling purposes,but new 
class names with different colors can be created by adding a state value 
for color (--state) and including the .triangle mixin with desired color.*/
/*white triangles*/
.triangle--up--white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #FFF; }

.triangle--right-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

.triangle--down-white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #FFF;
  cursor: pointer; }

.triangle--left-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

/*black triangles*/
.triangle--up-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #000; }

.triangle--right-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--down-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #000; }

.triangle--left-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--right-black.left:before {
  content: ""; }

/*black triangle sizes*/
.triangle--down-black--small {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.25em solid transparent;
  border-right: 0.25em solid transparent;
  border-top: 0.25em solid #000; }

/*white arrows*/
.arrow--down-white {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #FFF;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(225deg);
  transform: rotate(225deg);
  -moz-transform: rotate(225deg);
  transform: rotate(225deg);
  -ms-transform: rotate(225deg);
  transform: rotate(225deg);
  -o-transform: rotate(225deg);
  transform: rotate(225deg); }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
.grid, .grid__row--12 {
  display: grid; }

/****Grid containers****
 *all grid containers must be accompanied with the class of .grid 
 *in order to enable display: grid. Must be used on the parent container
 *with children placed in specified grid areas (using 'grid__template-columns--'
 *and 'grid__template-rows--' or their corresponding offsets located below 
 *the grid-containers section)
 */
.grid__container, .grid__container--12, .grid__container--4, .grid__container--3, .grid__container--2 {
  grid-gap: 0.125em;
  margin: auto;
  max-width: 95%; }

.grid__container--12 {
  grid-template-columns: repeat(12, auto);
  grid-template-rows: repeat(12, minmax(min-content, auto)); }

.grid__container--4 {
  grid-template-columns: repeat(4, auto); }

.grid__container--3 {
  grid-template-columns: repeat(3, auto); }

.grid__container--2 {
  grid-template-columns: repeat(2, auto); }

.grid__container--page-layout {
  grid-template-areas: "main main" "footer footer";
  grid-template-columns: minmax(min-content, auto) 25%;
  grid-template-rows: minmax(min-content, auto) 10em;
  margin: 0 auto;
  max-width: 95%; }
  @media screen and (min-width: 820px) {
    .grid__container--page-layout {
      grid-template-areas: "main navigation" "footer footer"; } }

.grid__content--page-layout {
  grid-area: main; }

.grid__footer--page-layout {
  grid-area: footer; }

.grid__navigation--page-layout--right {
  display: none;
  grid-area: navigation; }
  @media screen and (min-width: 820px) {
    .grid__navigation--page-layout--right {
      display: block; } }

/*used with .grid__container--12 to create an inline row with 12 columns*/
.grid__row--12 {
  grid-template-columns: repeat(12, auto); }

/****Grid tempate columns & rows****/
/*Grid template-columns beginning from grid-line 1*/
.grid__template--columns-1-12 {
  grid-column: 1/span 1; }

.grid__template--columns-1-6 {
  grid-column: 1/span 2; }

.grid__template--columns--1-4 {
  grid-column: 1/span 3; }

.grid__template--columns-1-3 {
  grid-column: 1/span 4; }

.grid__template--columns-5-12 {
  grid-column: 1/span 5; }

.grid__template--columns-1-2 {
  grid-column: 1/span 6; }

.grid__template--columns-7-12 {
  grid-column: 1/span 7; }

.grid__template--columns-2-3 {
  grid-column: 1/span 8; }

.grid__template--columns-3-4 {
  grid-column: 1/span 9; }

.grid__template--columns-5-6 {
  grid-column: 1/span 10; }

.grid__template--columns-11-12 {
  grid-column: 1/span 11; }

.grid__template--columns-12 {
  grid-column: 1/span 12; }

/*Grid-template-rows beginning from grid-line 1*/
.grid__template--rows-1-12 {
  grid-row: 1/span 1; }

.grid__template--rows-1-6 {
  grid-row: 1/span 2; }

.grid__template--rows--1-4 {
  grid-row: 1/span 3; }

.grid__template--rows-1-3 {
  grid-row: 1/span 4; }

.grid__template--rows-5-12 {
  grid-row: 1/span 5; }

.grid__template--rows-1-2 {
  grid-row: 1/span 6; }

.grid__template--rows-7-12 {
  grid-row: 1/span 7; }

.grid__template--rows-2-3 {
  grid-row: 1/span 8; }

.grid__template--rows-3-4 {
  grid-row: 1/span 9; }

.grid__template--rows-5-6 {
  grid-row: 1/span 10; }

.grid__template--rows-11-12 {
  grid-row: 1/span 11; }

.grid__template--rows-12 {
  grid-row: 12; }

/*grid-template-columns spanning x columns, with start lines defined
by the first value of grid-column and the last value of the class name
'grid__template--columns-span(x)-y'*/
/*grid-template columns spanning 1 column*/
.grid__template--columns-span1-2 {
  grid-column: 2/span 1; }

.grid__template--columns-span1-3 {
  grid-column: 3/span 1; }

.grid__template--columns-span1-4 {
  grid-column: 4/span 1; }

.grid__template--columns-span1-5 {
  grid-column: 5/span 1; }

.grid__template--columns-span1-6 {
  grid-column: 6/span 1; }

.grid__template--columns-span1-7 {
  grid-column: 7/span 1; }

.grid__template--columns-span1-8 {
  grid-column: 8/span 1; }

.grid__template--columns-span1-9 {
  grid-column: 9/span 1; }

.grid__template--columns-span1-10 {
  grid-column: 10/span 1; }

.grid__template--columns-span1-11 {
  grid-column: 11/span 1; }

/*grid-template columns spanning 2 columns*/
.grid__template--columns-span2-3 {
  grid-column: 3/span 2; }

/*grid-template columns spanning 3 columns*/
.grid__template--columns-span3-2 {
  grid-column: 2/span 3; }

.grid__template--columns-span3-3 {
  grid-column: 3/span 3; }

.grid__template--columns-span3-4 {
  grid-column: 4/span 3; }

.grid__template--columns-span3-5 {
  grid-column: 5/span 3; }

.grid__template--columns-span3-6 {
  grid-column: 6/span 3; }

.grid__template--columns-span3-7 {
  grid-column: 7/span 3; }

.grid__template--columns-span3-8 {
  grid-column: 8/span 3; }

.grid__template--columns-span3-9 {
  grid-column: 9/span 3; }

/*grid-template columns spanning 4 columns*/
.grid__template--columns-span4-2 {
  grid-column: 2/span 4; }

.grid__template--columns-span4-3 {
  grid-column: 3/span 4; }

.grid__template--columns-span4-4 {
  grid-column: 4/span 4; }

.grid__template--columns-span4-5 {
  grid-column: 5/span 4; }

.grid__template--columns-span4-6 {
  grid-column: 6/span 4; }

.grid__template--columns-span4-7 {
  grid-column: 7/span 4; }

.grid__template--columns-span4-8 {
  grid-column: 8/span 4; }

.grid__template--columns-span4-9 {
  grid-column: 9/span 4; }

/*Flexible grid classes*/
.grid__row--responsive {
  position: relative;
  grid-row: 1/span min-content; }

/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*MISC*/
.main {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 4.45em;
  background: #DEF9EE;
  overflow-y: auto; }
  @media screen and (min-width: 1024px) {
    .main {
      position: absolute;
      bottom: 0;
      left: 14em;
      right: 0;
      top: 4.35em;
      overflow-y: auto; } }

.main__section {
  border-bottom: 0.01em solid #4BA7AB;
  position: relative;
  margin-bottom: 1em; }

.main__section.top {
  margin-bottom: 0;
  border-bottom: 0; }

.main__sectionContent {
  border-top: 0.25em dotted #C7C7C7;
  border-bottom: 0.25em dotted #C7C7C7;
  margin-top: 2em;
  margin-right: auto;
  margin-bottom: 2em;
  margin-left: auto;
  position: relative;
  max-width: 95%;
  padding: 1em; }

.main__sectionDescription {
  border-left: 0.5em groove #3CB3B9;
  margin-right: 2.5em;
  margin-bottom: 1em;
  margin-left: 2.5em;
  padding-top: 1em;
  padding-bottom: 1em;
  font-family: "Quicksand Light";
  line-height: 1.5em; }

.main__sectionDescription--bold {
  margin-right: auto;
  margin-left: auto;
  font-size: 1.35em;
  font-weight: 600;
  line-height: 1.5em;
  text-align: right; }

.main__sectionDescription-card {
  padding: 0.5em;
  border: 0.05em solid #A0A0A0;
  border-radius: 0.25em;
  max-width: 90%; }

.main__sectionDescription-card.last {
  max-width: 100%; }

.main__sectionDescription-content {
  line-height: 2em; }

.main__sectionDescription-heading {
  font-size: 1.25em;
  font-weight: 600;
  margin-bottom: 0.5em;
  padding-bottom: 0.5em;
  border-bottom: 0.01em solid #A0A0A0; }

.main__sectionDescription-title {
  position: relative;
  margin: 0 auto;
  max-width: 90%; }

.main__sectionDescription-wrapper {
  padding: 1em; }

@media screen and (max-width: 640px) {
  .main__sectionDescription-wrapper.grid__container--2 {
    display: grid; } }

@media screen and (min-width: 640px) {
  .main__sectionDescription-wrapper.grid__container--3 {
    display: grid; } }

.main__sectionDetails {
  padding-top: 1em;
  padding-right: 1em;
  padding-left: 1em;
  position: relative;
  margin-bottom: 0.5em;
  min-height: 4em;
  font-family: "Quicksand Bold"; }

.main__sectionDetails-description {
  display: flex;
  align-items: center;
  margin-left: 1em;
  font-family: "Quicksand Light";
  font-size: 1.125em; }

.main__sectionDetails-description-text {
  margin-right: 0.25em;
  font-weight: 600; }

.main__sectionDetails-description-tag {
  margin-right: 0.25em;
  margin-left: 0.25em;
  padding: 0.25em 1em;
  font-weight: 600;
  letter-spacing: 0.125em;
  background: #000;
  border-radius: 0.25em;
  box-shadow: inset 0 0.125em 1em 0.125em #3C3939;
  color: #FFF;
  text-shadow: 0.05em 0.075em 0.05em #FFF; }

.main__sectionDetails-chapter {
  width: min-content;
  height: min-content;
  position: relative;
  display: flex;
  flex-direction: row; }

.main__sectionDetails-chapter-text {
  padding-top: 0.35em;
  padding-right: 0.25em;
  padding-bottom: 0.25em;
  padding-left: 0.25em;
  flex: 1;
  margin-right: 0.25em;
  background: #3CB3B9; }

.main__sectionDetails-text-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  padding-bottom: 0.25em;
  min-height: 2em; }

.main__sectionDetails-identifier {
  border-top: 0.25em solid #000;
  max-width: 4em;
  margin-bottom: 0.45em; }

.main__sectionHeading {
  border-bottom: 0.01em solid #C7C7C7;
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 2em 1em;
  box-shadow: inset 0 -0.25em 0.75em #C7C7C7; }

.main__sectionHeading-expander-icon {
  width: 2.5em;
  height: 2.5em;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
  border: 0.25em double #8C8C8C;
  border-radius: 0.25em; }

.main__sectionHeading-expander-icon:hover {
  box-shadow: 0.15em 0.15em 0.75em #8C8C8C; }

.main__sectionHeading-icon {
  border-top: 0.25em groove #133A9C;
  border-right: 0.25em groove #133A9C;
  margin-right: 1em;
  width: 3em;
  height: 3em;
  position: relative;
  box-shadow: 0.275em -0.125em 0.75em #A0A0A0; }

.main__sectionHeading-icon--medium {
  border-top: 0.175em groove #3CB3B9;
  border-right: 0.175em groove #3CB3B9;
  margin-top: 0.25em;
  margin-right: 0.25em;
  width: 2.5em;
  height: 2.5em; }

.main__sectionHeading-icon--small {
  border-top: 0.185em groove #26CE31;
  border-right: 0.185em groove #26CE31;
  margin-top: 0.35em;
  margin-right: 0.25em;
  width: 2em;
  height: 2em; }

.main__sectionHeading-icon--x-small {
  border-bottom: 0.15em groove #F00;
  border-left: 0.15em groove #F00;
  margin-top: 1.05em;
  width: 0.75em;
  height: 0.75em; }

.main__sectionHeading-text {
  position: relative;
  flex: 5;
  max-width: 75%;
  font-family: "Quicksand Regular";
  font-size: 1.75em;
  line-height: 2em; }

.main__sectionHeading--right {
  position: relative;
  display: flex;
  flex: 1;
  align-items: center;
  min-height: 3.5em; }

.main__wrapper, .main__wrapper--right {
  margin-top: 1em;
  margin-bottom: 1em;
  border-top: 0.25em double #C7C7C7;
  position: absolute;
  max-width: 95%;
  background: #E6E6E6;
  border: 1px solid #C7C7C7;
  box-shadow: inset 0 0.25em 0.75em 0.125em #C7C7C7, inset 0 0.125em 0.75em 0.05em #ffffff; }
  @media screen and (min-width: 820px) {
    .main__wrapper, .main__wrapper--right {
      position: relative;
      max-width: 100%; } }

.main__wrapper--right {
  margin-left: 2em;
  height: 100%; }

.main__pageHeading {
  position: relative;
  margin-bottom: 1em;
  min-height: 10em;
  padding: 0 4em;
  width: 100%;
  background: repeating-linear-gradient(135deg, #212121 4%, #23585A 25%, #1F9EA4 40%, #3CB3B9 50%, transparent 96%);
  box-shadow: 0 0.05em 0.5em 0.05em #A0A0A0; }

.column {
  display: flex; }

/*INCLUDE POSITIONING STATIC DIMENSIONS OF MODULES*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*colors(include color variables from colors file)*/
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box; }

.navigationBar {
  /*Positioning*/
  position: fixed;
  left: 0;
  right: 0;
  top: 0.375em;
  /*Box Model*/
  display: flex;
  flex-direction: row;
  min-height: 4em;
  /*Visual*/
  font-family: "Quicksand Regular";
  background: #000;
  box-shadow: 0 0.05em 0.5em 0.05em #4E4E4E; }

.navigationBar--state {
  position: relative;
  flex: 1;
  display: flex; }

.navigationBar__text--absolute {
  color: #FFF; }

/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Semantically important icons*/
#icon__mq {
  display: block;
  color: #FFF; }
  @media screen and (min-width: 1024px) and (max-width: 1350px) {
    #icon__mq {
      display: none; } }

.icon__button {
  width: 2em;
  height: 2em;
  position: absolute;
  left: 1.5em;
  padding: 0.5em;
  border: 0.01em solid #3C3939;
  border-radius: 0.25em;
  box-shadow: inset 0 0em 0.75em 0.125em #000, inset 0 0.35em 1em 0.125em #4E4E4E;
  color: #FFF;
  cursor: pointer; }

.icon__code--left {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(315deg);
  transform: rotate(315deg);
  -moz-transform: rotate(315deg);
  transform: rotate(315deg);
  -ms-transform: rotate(315deg);
  transform: rotate(315deg);
  -o-transform: rotate(315deg);
  transform: rotate(315deg);
  right: 0.85em; }

.icon__code--right {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(135deg);
  transform: rotate(135deg);
  -moz-transform: rotate(135deg);
  transform: rotate(135deg);
  -ms-transform: rotate(135deg);
  transform: rotate(135deg);
  -o-transform: rotate(135deg);
  transform: rotate(135deg);
  left: 0.85em; }

.icon__search {
  margin-top: -0.125em; }

.icon__media--circle {
  height: 1em;
  width: 1em;
  -ms-border-radius: 0.5em;
  moz-border-radius: 0.5em;
  -webkit-border-radius: 0.5em;
  border-radius: 0.5em;
  background: #3CB3B9; }

/*page corner icons*/
.icon__pageCorner--top-left {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

.icon__pageCorner--bottom-right {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

/* aligns an icon on the right side of a menu item, ideal for positioning icons that are placed within the same
container as a text to create padding between the text and the icon*/
.icon__menu-item--right {
  position: absolute;
  right: 0; }

.icon__menu-item--top {
  position: absolute;
  top: 1em; }

/*creates a margin on the opposite side of the specified position
in order to align the icon on either the right or left margin*/
.icon--left {
  margin-right: 0.5em; }

.icon--right {
  margin-left: 0.5em;
  margin-top: 0.125em; }

/*Positioning for absolutely positioned items*/
.icon--absolute {
  position: absolute; }

.bottom {
  bottom: 0; }

.left {
  left: 0; }

.right {
  right: 0; }

.top {
  top: 0; }

/*Creates a triangle with equal widths for all borders. Commonly used 
with dropdown menus to signify additional content. Color class names for
black and white triangles have been created for styling purposes,but new 
class names with different colors can be created by adding a state value 
for color (--state) and including the .triangle mixin with desired color.*/
/*white triangles*/
.triangle--up--white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #FFF; }

.triangle--right-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

.triangle--down-white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #FFF;
  cursor: pointer; }

.triangle--left-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

/*black triangles*/
.triangle--up-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #000; }

.triangle--right-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--down-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #000; }

.triangle--left-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--right-black.left:before {
  content: ""; }

/*black triangle sizes*/
.triangle--down-black--small {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.25em solid transparent;
  border-right: 0.25em solid transparent;
  border-top: 0.25em solid #000; }

/*white arrows*/
.arrow--down-white {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #FFF;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(225deg);
  transform: rotate(225deg);
  -moz-transform: rotate(225deg);
  transform: rotate(225deg);
  -ms-transform: rotate(225deg);
  transform: rotate(225deg);
  -o-transform: rotate(225deg);
  transform: rotate(225deg); }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
.sidebar {
  display: none; }
  @media screen and (min-width: 1024px) {
    .sidebar {
      position: fixed;
      bottom: 0;
      left: 0;
      top: 4.35em;
      display: block;
      min-width: 14em;
      background: #212121; } }

.sidebar__dropDown {
  position: absolute;
  left: 0;
  right: 0;
  top: 3em;
  display: none;
  padding: 0.75em;
  background: linear-gradient(135deg, #3CB3B9, #000);
  color: #FFF;
  animation: 0.05s ease-out normal slide-vertical;
  transition: 0.3s; }

.sidebar__dropDown.show {
  display: block; }

.sidebar__dropDown-item {
  position: relative;
  padding: 0.5em 0; }

.sidebar__dropDown-item.collapsible {
  padding: 0; }

.sidebar__dropDown-item.collapsible .triangle--down-white:hover {
  opacity: 0.75; }

.sidebar__dropDown-item.collapsible.active {
  opacity: 0.75; }

.sidebar__dropDown-item.collapsible.active .sidebar__dropDown-item-sub-menu {
  opacity: 1; }

.sidebar__dropDown-item.first {
  padding-top: 0; }

.sidebar__dropDown-sub-menu {
  padding-left: 1em;
  position: relative;
  display: none; }

.sidebar__dropDown-sub-menu.show {
  display: block; }

/*show when bars icon is clicked in sidebar subheading*/
.sidebar__iconBar {
  display: none;
  /*
   **INCLUDE IN JS**
  	@include border-radius(0, 0.5em, 0.5em, 0);
  
  	position: relative;
  	flex: 1;
  	margin-right: 0.5em;
  	min-width: 3em;
  	background: $black;
  */ }

.sidebar__innerContainer {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  display: flex;
  flex-direction: row;
  margin: 0.5em;
  background: transparent; }

.sidebar__module, .sidebar__moduleSubHeading, .sidebar__module.last {
  flex: 1;
  align-items: center;
  justify-content: center;
  position: relative;
  display: flex;
  min-height: 3em;
  background: #000;
  font-family: "Quicksand Light"; }

.sidebar__moduleSection {
  flex: 1;
  flex-direction: column;
  margin: 0;
  max-height: 16em;
  background: transparent;
  border-radius: 0.5em; }

.sidebar__moduleSubHeading {
  border-top: 0.25em solid #4BA7AB;
  border-top-left-radius: 0.5em;
  border-top-right-radius: 0.5em;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  padding-left: 0.5em;
  position: relative;
  min-height: 3.5em;
  box-shadow: inset 0 0em 0.75em 0.125em #000, inset 0 0.35em 1em 0.125em #4E4E4E; }

.sidebar__module.last, .last.sidebar__moduleSubHeading {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0.5em;
  border-bottom-left-radius: 0.5em;
  border-bottom: 0; }

.sidebar__module.closed .sidebar__dropDown, .closed.sidebar__moduleSubHeading .sidebar__dropDown {
  display: none; }

.sidebar__module.opened .sidebar__dropDown, .opened.sidebar__moduleSubHeading .sidebar__dropDown {
  display: block; }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*Input styling*/
input[type="text"] {
  width: 90%;
  height: 2em;
  padding-top: 0;
  padding-right: 1em;
  padding-bottom: 0;
  padding-left: 1em;
  border-top-left-radius: 0.5em;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0.5em;
  background: transparent;
  border: 0.1em solid #8C8C8C;
  color: #FFF;
  font-family: "Quicksand Light"; }

input[type="text"].form__input--no-border {
  border-top: 0;
  border-right: 0;
  border-bottom: 0.01em solid #3C3939;
  border-left: 0; }

.form__segment {
  display: none; }
  @media screen and (min-width: 768px) {
    .form__segment {
      display: flex;
      flex-direction: row;
      position: relative;
      min-height: 1.5em;
      width: 80%; } }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Semantically important icons*/
#icon__mq {
  display: block;
  color: #FFF; }
  @media screen and (min-width: 1024px) and (max-width: 1350px) {
    #icon__mq {
      display: none; } }

.icon__button {
  width: 2em;
  height: 2em;
  position: absolute;
  left: 1.5em;
  padding: 0.5em;
  border: 0.01em solid #3C3939;
  border-radius: 0.25em;
  box-shadow: inset 0 0em 0.75em 0.125em #000, inset 0 0.35em 1em 0.125em #4E4E4E;
  color: #FFF;
  cursor: pointer; }

.icon__code--left {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(315deg);
  transform: rotate(315deg);
  -moz-transform: rotate(315deg);
  transform: rotate(315deg);
  -ms-transform: rotate(315deg);
  transform: rotate(315deg);
  -o-transform: rotate(315deg);
  transform: rotate(315deg);
  right: 0.85em; }

.icon__code--right {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #4E4E4E;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(135deg);
  transform: rotate(135deg);
  -moz-transform: rotate(135deg);
  transform: rotate(135deg);
  -ms-transform: rotate(135deg);
  transform: rotate(135deg);
  -o-transform: rotate(135deg);
  transform: rotate(135deg);
  left: 0.85em; }

.icon__search {
  margin-top: -0.125em; }

.icon__media--circle {
  height: 1em;
  width: 1em;
  -ms-border-radius: 0.5em;
  moz-border-radius: 0.5em;
  -webkit-border-radius: 0.5em;
  border-radius: 0.5em;
  background: #3CB3B9; }

/*page corner icons*/
.icon__pageCorner--top-left {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

.icon__pageCorner--bottom-right {
  position: relative;
  width: 2em;
  height: 2em;
  border-left: 0.25em groove #3CB3B9;
  border-top: 0.25em groove #3CB3B9;
  border-bottom: 0.25em groove #3CB3B9;
  border-right: 0.25em groove #3CB3B9; }

/* aligns an icon on the right side of a menu item, ideal for positioning icons that are placed within the same
container as a text to create padding between the text and the icon*/
.icon__menu-item--right {
  position: absolute;
  right: 0; }

.icon__menu-item--top {
  position: absolute;
  top: 1em; }

/*creates a margin on the opposite side of the specified position
in order to align the icon on either the right or left margin*/
.icon--left {
  margin-right: 0.5em; }

.icon--right {
  margin-left: 0.5em;
  margin-top: 0.125em; }

/*Positioning for absolutely positioned items*/
.icon--absolute {
  position: absolute; }

.bottom {
  bottom: 0; }

.left {
  left: 0; }

.right {
  right: 0; }

.top {
  top: 0; }

/*Creates a triangle with equal widths for all borders. Commonly used 
with dropdown menus to signify additional content. Color class names for
black and white triangles have been created for styling purposes,but new 
class names with different colors can be created by adding a state value 
for color (--state) and including the .triangle mixin with desired color.*/
/*white triangles*/
.triangle--up--white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #FFF; }

.triangle--right-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

.triangle--down-white {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #FFF;
  cursor: pointer; }

.triangle--left-white {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #FFF;
  border-bottom: 0.5em solid transparent; }

/*black triangles*/
.triangle--up-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-bottom: 0.5em solid #000; }

.triangle--right-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-left: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--down-black {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.5em solid #000; }

.triangle--left-black {
  height: 0;
  width: 0;
  position: absolute;
  border-top: 0.5em solid transparent;
  border-right: 0.5em solid #000;
  border-bottom: 0.5em solid transparent; }

.triangle--right-black.left:before {
  content: ""; }

/*black triangle sizes*/
.triangle--down-black--small {
  height: 0;
  width: 0;
  position: absolute;
  border-left: 0.25em solid transparent;
  border-right: 0.25em solid transparent;
  border-top: 0.25em solid #000; }

/*white arrows*/
.arrow--down-white {
  display: inline-block;
  padding: 0.25em;
  position: absolute;
  border: solid #FFF;
  border-right: 0.25em;
  border-bottom: 0.25em;
  -webkit-transform: rotate(225deg);
  transform: rotate(225deg);
  -moz-transform: rotate(225deg);
  transform: rotate(225deg);
  -ms-transform: rotate(225deg);
  transform: rotate(225deg);
  -o-transform: rotate(225deg);
  transform: rotate(225deg); }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
.menu {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  display: block;
  padding: 1em;
  font-family: "Quicksand Light"; }

.menu__item {
  position: relative;
  font-weight: 600; }

.menu__heading {
  margin-bottom: 1em;
  line-height: 1.15em;
  font-family: "Quicksand Regular";
  font-size: 1.15em;
  font-weight: 600; }

.menu__expander-icon {
  cursor: pointer;
  right: 0;
  top: 0.5em; }

/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Basic colors*/
/*Tertiary color scheme for main color theme*/
/*Button preset colors*/
/*include box-shadow mixin to create preset box-shadow colored themes
$teal-box-shadow: //code here
*/
/*Variables for font-size and line-height*/
.text__border {
  border: 0.05em outset #FFF;
  border-radius: 0 0.5em;
  box-shadow: inset 0 -0.125em 0.75em 0.0175em #4BA7AB, inset 0 -0.125em 0.25em #FFF, inset 0 -0.25em 0.5em #26CE31, inset 0 -0.25em 1em #F00; }

.text__wrapper {
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 1.5em;
  display: flex;
  flex-direction: row;
  position: absolute; }

.text__heading, .text__heading--main, .text__heading--nav {
  letter-spacing: 0.1em;
  padding-top: 0;
  padding-right: 0.5em;
  padding-bottom: 0;
  padding-left: 0.55em;
  color: #FFF;
  line-height: 1.5em;
  font-size: 1em;
  font-weight: 600;
  margin-left: -0.1em; }

.text__headingGroup {
  position: relative;
  left: 1.5em;
  display: flex;
  flex-direction: row;
  align-items: center; }

.text__heading--main {
  position: absolute;
  top: 2.25em;
  padding: 0;
  font-family: "Quicksand Regular";
  font-size: 2.25em;
  color: #FFF; }

.text__headingLabel--main {
  position: absolute;
  top: 3em;
  padding-top: 0.5em;
  width: 4em;
  font-family: "Quicksand Light";
  border-top: 0.25em solid #3CB3B9;
  color: #FFF; }

.text__heading--nav {
  font-size: 1.25em; }
  @media screen and (min-width: 768px) {
    .text__heading--nav {
      font-size: 1.5em;
      font-weight: normal; } }

.text__heading--nav.left {
  margin-left: 0.25em; }

.text__heading--nav.right {
  margin-right: 0.5em; }

.text__label {
  position: relative;
  padding-bottom: 0.5em;
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link, .text__link--underlined {
  font-family: "Quicksand Light";
  font-size: 0.925em; }

.text__link:hover, .text__link--underlined:hover {
  cursor: pointer;
  opacity: 0.75; }

.text--bold {
  font-weight: 600; }

.text--code {
  padding: 0.125em 0.25em;
  background: #1F9EA4;
  border-radius: 0.125em;
  box-shadow: inset 0 0.05em 0.5em #3CB3B9;
  color: #FFF;
  font-weight: 600; }

.text--italicized {
  font-style: italic; }

.text--responsive {
  counter-increment: 1;
  position: relative;
  font-size: 0.95em; }

@font-face {
  font-family: "Miriam Libre";
  src: url("../Miriam_Libre/MiriamLibre-Regular.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Bold";
  src: url("../Quicksand/Quicksand-Bold.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Light";
  src: url("../Quicksand/Quicksand-Light.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Medium";
  src: url("../Quicksand/Quicksand-Medium.ttf") format("truetype"); }
@font-face {
  font-family: "Quicksand Regular";
  src: url("../Quicksand/Quicksand-Regular.ttf") format("truetype"); }
/*GLOBAL HELPERS*/
/*used with display property to hide content*/
/*Media query breakpoint widths*/
/*Vendor prefix mixin*/
/*@keyframes mixins (animation mixins)*/
@keyframes slide-vertical {
  from {
    margin-bottom: 20%;
    height: 50%; }
  to {
    margin-bottom: 100%;
    height: 200%; } }
/*Icon mixins*/
/*Only input a string value for the $direction argument, leave the position
argument unquoted in order for the CSS to render properly*/
/*Box model dimensions*/
/*Transition Mixins*/
/*
@mixin transition($animations: ()) {
	$transition: map-merge((
		animation-iteration-count: 1,
		animation-duration: 0.3s,
		animation-timing-function: ease,
		animation-fill-mode: both), $animations);

	animation-iteration-count: map-get($transition, animation-iteration-count);
	animation-duration: map-get($transition, animation-duration);
	animation-timing-function: map-get($transition, animation-timing-function);
	animation-fill-mode: map-get($transition, animation-fill-mode);

}
*/
/*Typography Mixins*/
/*Box shadow*/
/*Specify inset value as false to turn off inset property value*/
/*Flexbox helpers*/
/*MARGIN & PADDING HELPERS*/
/*create a margin or padding offset by plugging in a value and string that represents
the direction of where you want the margin spacing to be applied*/
/*Positioning mixins*/
/*Positioning for absolutely positioned items can be set by including numeric values for each arg*/
/*Media Query Mixins*/

/*# sourceMappingURL=main.css.map */
